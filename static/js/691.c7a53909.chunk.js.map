{"version":3,"file":"static/js/691.c7a53909.chunk.js","mappings":"gTAEaA,EAAQC,EAAAA,GAAAA,MAAH,kIAQLC,EAASD,EAAAA,GAAAA,OAAH,+M,SCLNE,EAAS,WACpB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAEjBC,QAAQC,IAAIH,EAASI,OAErB,IAAMC,EAAQP,EAAaQ,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACR,GAAc,OAAVF,QAA4BG,IAAVH,GAAiC,KAAVA,EAA7C,CAIA,IAAMI,EAAkB,IAAIC,gBAEtBC,EAAe,iBAAaN,EAAb,WAEfO,EAAQ,mCAAG,8GAEcC,EAAAA,EAAAA,GALjB,gBAORJ,EACAE,GALW,OAEPG,EAFO,OAQblB,EAASkB,GARI,gDAUbZ,QAAQC,IAAR,0BAVa,yDAAH,qDAed,OAFAS,IAEO,kBAAMH,EAAgBM,OAAtB,CArBN,CAsBF,GAAE,CAACV,EAAOT,IAaX,OACE,4BACE,kBAAMoB,SAAU,SAAAC,GAAC,OAbK,SAAAA,GACxBA,EAAEC,iBACF,IAAMC,EAAaF,EAAEG,OAAO,GAAGC,MAAMC,OAErC,GAAmB,KAAfH,EACF,OAAOpB,EAAgB,CAAC,GAE1BA,EAAgB,CAAEM,MAAOc,IACzBF,EAAEG,OAAOG,OACV,CAIwBC,CAAkBP,EAAtB,EAAjB,WACE,SAAC3B,EAAD,CACEmC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,qBAEd,SAACpC,EAAD,CAAQiC,KAAK,SAAb,wBAGF,gCACGI,QAAQlC,EAAMmC,UAAYnC,EAAMmC,QAAQC,OAAS,IAChD,wBACGpC,EAAMmC,QAAQE,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,GAAM9B,MAAO,CAAEgC,KAAMpC,GAAlC,SACGiC,KAFIC,EAMZ,MAGJL,QAAQlC,EAAMmC,UACU,IAAzBnC,EAAMmC,QAAQC,QACC,IAAfpC,EAAM0C,MACI,KAAVhC,GACE,sEACE,UAIX,EAED,G,8FCvFaQ,EAAe,mCAAG,WAC7ByB,EACA7B,GAF6B,gGAG7BE,EAH6B,+BAGX,GAGZ4B,EANuB,mCAQvBC,EARuB,kDAQHF,EARG,mBAQgBC,EARhB,0BAQyC5B,GARzC,SAUN8B,EAAAA,EAAAA,IAAUD,EAAK,CAAEE,OAAQjC,EAAgBiC,SAVnC,cAUvBC,EAVuB,yBAYtBA,EAASC,MAZa,2CAAH,uD","sources":["pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/services.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Input = styled.input`\n  margin-right: 5px;\n  border: 2px solid grey;\n  border-radius: 3px;\n  height: 20px;\n  width: 300px;\n`;\n\nexport const Button = styled.button`\n  border: 2px solid grey;\n  border-radius: 3px;\n  height: 26px;\n  width: 100px;\n  cursor: pointer;\n  &:hover,\n  :focus {\n    background-color: #80808054;\n    border: 0;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { AxiosApiService } from '../../services/services';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { Input, Button } from './Movies.styled';\n\nexport const Movies = () => {\n  const [items, setItems] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  console.log(location.state);\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query === null || query === undefined || query === '') {\n      return;\n    }\n\n    const abortController = new AbortController();\n    const queryUrl = `search/movie?`;\n    const wordSearchQuery = `&query=${query}&page=1`;\n\n    const getItems = async () => {\n      try {\n        const responseData = await AxiosApiService(\n          queryUrl,\n          abortController,\n          wordSearchQuery\n        );\n\n        setItems(responseData);\n      } catch (error) {\n        console.log(`IsError: ${error}`);\n      }\n    };\n    getItems();\n\n    return () => abortController.abort();\n  }, [query, setItems]);\n\n  const updateQueryString = e => {\n    e.preventDefault();\n    const queryValue = e.target[0].value.trim();\n\n    if (queryValue === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: queryValue });\n    e.target.reset();\n  };\n\n  return (\n    <div>\n      <form onSubmit={e => updateQueryString(e)}>\n        <Input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"  Search movies\"\n        />\n        <Button type=\"submit\">Search</Button>\n      </form>\n\n      <>\n        {Boolean(items.results) && items.results.length > 0 && (\n          <ul>\n            {items.results.map(({ title, id }) => {\n              return (\n                <li key={id}>\n                  <Link to={`${id}`} state={{ from: location }}>\n                    {title}\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n        {Boolean(items.results) &&\n        items.results.length === 0 &&\n        items.page === 1 &&\n        query !== '' ? (\n          <p>No movies found, please change your query.</p>\n        ) : null}\n      </>\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nexport const AxiosApiService = async (\n  queryUrl,\n  abortController,\n  wordSearchQuery = ''\n) => {\n  const BASE_URL = `https://api.themoviedb.org/3/`;\n  const API_KEY = `1f93214cb1bbadcc143eeb01d552ab8c`;\n\n  const url = `${BASE_URL}${queryUrl}api_key=${API_KEY}&language=en-US${wordSearchQuery}`;\n\n  const response = await axios.get(url, { signal: abortController.signal });\n\n  return response.data;\n};\n"],"names":["Input","styled","Button","Movies","useState","items","setItems","useSearchParams","searchParams","setSearchParams","location","useLocation","console","log","state","query","get","useEffect","undefined","abortController","AbortController","wordSearchQuery","getItems","AxiosApiService","responseData","abort","onSubmit","e","preventDefault","queryValue","target","value","trim","reset","updateQueryString","type","autoComplete","autoFocus","placeholder","Boolean","results","length","map","title","id","to","from","page","queryUrl","API_KEY","url","axios","signal","response","data"],"sourceRoot":""}