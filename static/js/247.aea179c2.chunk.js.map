{"version":3,"file":"static/js/247.aea179c2.chunk.js","mappings":"yNAsDA,UAlDa,WACX,OAAgCA,EAAAA,EAAAA,YAAhC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAsBR,OApBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBACtBC,EAAQ,gBAAYL,EAAZ,aAERM,EAAW,mCAAG,8GAEWC,EAAAA,EAAAA,GAAgBF,EAAUF,GAFrC,OAEVK,EAFU,OAIhBC,QAAQC,IAAIF,GAEZT,EAAYS,EAAaG,MANT,gDAQhBF,QAAQC,IAAR,0BARgB,yDAAH,qDAajB,OAFAJ,IAEO,kBAAMH,EAAgBS,OAAtB,CACR,GAAE,CAACZ,KAGF,8BACGa,QAAQf,KACP,wBACGA,EAASgB,KAAI,YAAiD,IAA9CC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAQzC,OACE,2BACE,gBAAKC,IATK,SAAAD,GACZ,OAAKA,EAGC,uCAAN,OAA8CA,GAFrC,6EAGV,CAIaE,CAAMF,GAAeG,IAAI,GAAGC,OAAO,WAC7C,uBAAIL,KACJ,uCAAeD,OAHRD,EAMZ,OAKV,C,8FClDYR,EAAe,mCAAG,WAC7BF,EACAF,GAF6B,gGAG7BoB,EAH6B,+BAGX,GAGZC,EANuB,mCAQvBC,EARuB,kDAQHpB,EARG,mBAQgBmB,EARhB,0BAQyCD,GARzC,SAUNG,EAAAA,EAAAA,IAAUD,EAAK,CAAEE,OAAQxB,EAAgBwB,SAVnC,cAUvBC,EAVuB,yBAYtBA,EAASC,MAZa,2CAAH,uD","sources":["components/Cast/Cast.jsx","services/services.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { AxiosApiService } from './../../services/services';\r\n\r\nconst Cast = () => {\r\n  const [castInfo, setCastInfo] = useState();\r\n  const { movieId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    const queryUrl = `movie/${movieId}/credits?`;\r\n\r\n    const getCastInfo = async () => {\r\n      try {\r\n        const responseData = await AxiosApiService(queryUrl, abortController);\r\n\r\n        console.log(responseData);\r\n\r\n        setCastInfo(responseData.cast);\r\n      } catch (error) {\r\n        console.log(`IsError: ${error}`);\r\n      }\r\n    };\r\n    getCastInfo();\r\n\r\n    return () => abortController.abort();\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {Boolean(castInfo) && (\r\n        <ul>\r\n          {castInfo.map(({ cast_id, character, name, profile_path }) => {\r\n            const photo = profile_path => {\r\n              if (!profile_path) {\r\n                return 'https://developersushant.files.wordpress.com/2015/02/no-image-available.png';\r\n              }\r\n              return `https://image.tmdb.org/t/p/original/${profile_path}`;\r\n            };\r\n\r\n            return (\r\n              <li key={cast_id}>\r\n                <img src={photo(profile_path)} alt=\"\" height=\"150px\" />\r\n                <p>{name}</p>\r\n                <p>Character: {character}</p>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n","import axios from 'axios';\r\n\r\nexport const AxiosApiService = async (\r\n  queryUrl,\r\n  abortController,\r\n  wordSearchQuery = ''\r\n) => {\r\n  const BASE_URL = `https://api.themoviedb.org/3/`;\r\n  const API_KEY = `1f93214cb1bbadcc143eeb01d552ab8c`;\r\n\r\n  const url = `${BASE_URL}${queryUrl}api_key=${API_KEY}&language=en-US${wordSearchQuery}`;\r\n\r\n  const response = await axios.get(url, { signal: abortController.signal });\r\n\r\n  return response.data;\r\n};\r\n"],"names":["useState","castInfo","setCastInfo","movieId","useParams","useEffect","abortController","AbortController","queryUrl","getCastInfo","AxiosApiService","responseData","console","log","cast","abort","Boolean","map","cast_id","character","name","profile_path","src","photo","alt","height","wordSearchQuery","API_KEY","url","axios","signal","response","data"],"sourceRoot":""}