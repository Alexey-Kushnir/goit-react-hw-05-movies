{"version":3,"file":"static/js/884.8c567b58.chunk.js","mappings":"iOAiEA,UA7DqB,WAAO,IAAD,IACzB,GAAkCA,EAAAA,EAAAA,YAAlC,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAKFE,EAAY,qBAJDC,EAAAA,EAAAA,MAIaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAoB7C,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBACtBC,EAAQ,gBAAYT,EAAZ,KAERU,EAAgB,mCAAG,8GAEMC,EAAAA,EAAAA,GAAgBF,EAAUF,GAFhC,OAEfK,EAFe,OAIrBb,EAAaa,GAJQ,uGAAH,qDAWtB,OAFAF,IAEO,kBAAMH,EAAgBM,OAAtB,CACR,GAAE,CAACb,KAGF,gCACGc,QAAQhB,KACP,4BACE,SAAC,KAAD,CAAMiB,GAAIb,EAAV,sBACA,gBACEc,IAAG,8CAAyClB,EAAUmB,aACtDC,IAAKpB,EAAUqB,eACfC,OAAO,WAET,0BACGtB,EAAUqB,eADb,KAC+BrB,EAAUuB,aAAaC,MAAM,EAAG,GAD/D,QAGA,yCAA0C,GAAzBxB,EAAUyB,cAAmBC,QAAQ,GAAtD,QACA,sCACA,uBAAI1B,EAAU2B,YACd,qCACA,uBACG3B,EAAU4B,OAAOC,KAAI,SAAAC,GACpB,MAAM,GAAN,OAAUA,EAAEC,KAAZ,IACD,OAEH,oDACA,SAAC,KAAD,CAAMd,GAAG,OAAT,mBACA,SAAC,KAAD,CAAMA,GAAG,UAAT,yBAGJ,SAAC,EAAAe,SAAD,CAAUC,UAAU,6CAApB,UACE,SAAC,KAAD,QAIP,C,8FC7DYpB,EAAe,mCAAG,WAC7BF,EACAF,GAF6B,gGAG7ByB,EAH6B,+BAGX,GAGZC,EANuB,mCAQvBC,EARuB,kDAQHzB,EARG,mBAQgBwB,EARhB,0BAQyCD,GARzC,SAWNG,EAAAA,EAAAA,IAAUD,EAAK,CAAEE,OAAQ7B,EAAgB6B,SAXnC,cAWvBC,EAXuB,yBAetBA,EAASC,MAfa,2CAAH,uD","sources":["pages/MovieDetails.jsx","services/services.js"],"sourcesContent":["import { useEffect, useState, Suspense } from 'react';\nimport { useParams, Link, useLocation, Outlet } from 'react-router-dom';\nimport { AxiosApiService } from '../services/services';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState();\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  // console.log(location);\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const queryUrl = `movie/${movieId}?`;\n\n    const getMovieInfoInfo = async () => {\n      try {\n        const responseData = await AxiosApiService(queryUrl, abortController);\n\n        setMovieInfo(responseData);\n      } catch (error) {\n        // console.log(`IsError: ${error}`);\n      }\n    };\n    getMovieInfoInfo();\n\n    return () => abortController.abort();\n  }, [movieId]);\n\n  return (\n    <>\n      {Boolean(movieInfo) && (\n        <div>\n          <Link to={backLinkHref}>Go back</Link>\n          <img\n            src={`https://image.tmdb.org/t/p/original/${movieInfo.poster_path}`}\n            alt={movieInfo.original_title}\n            height=\"350px\"\n          />\n          <h2>\n            {movieInfo.original_title} ({movieInfo.release_date.slice(0, 4)})\n          </h2>\n          <p>User Score: {(movieInfo.vote_average * 10).toFixed(0)}%</p>\n          <h3>Overview</h3>\n          <p>{movieInfo.overview}</p>\n          <h3>Generes</h3>\n          <p>\n            {movieInfo.genres.map(g => {\n              return `${g.name} `;\n            })}\n          </p>\n          <h4>Additional information</h4>\n          <Link to=\"cast\">Cast</Link>\n          <Link to=\"reviews\">Reviews</Link>\n        </div>\n      )}\n      <Suspense fallback={<div>Loading page...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nexport const AxiosApiService = async (\n  queryUrl,\n  abortController,\n  wordSearchQuery = ''\n) => {\n  const BASE_URL = `https://api.themoviedb.org/3/`;\n  const API_KEY = `1f93214cb1bbadcc143eeb01d552ab8c`;\n\n  const url = `${BASE_URL}${queryUrl}api_key=${API_KEY}&language=en-US${wordSearchQuery}`;\n\n  // const response = await axios.get(url);\n  const response = await axios.get(url, { signal: abortController.signal });\n\n  // console.log(response.data);\n\n  return response.data;\n};\n"],"names":["useState","movieInfo","setMovieInfo","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","abortController","AbortController","queryUrl","getMovieInfoInfo","AxiosApiService","responseData","abort","Boolean","to","src","poster_path","alt","original_title","height","release_date","slice","vote_average","toFixed","overview","genres","map","g","name","Suspense","fallback","wordSearchQuery","API_KEY","url","axios","signal","response","data"],"sourceRoot":""}