{"version":3,"file":"static/js/691.a7bb6758.chunk.js","mappings":"oRAEaA,EAAQC,EAAAA,GAAAA,MAAH,kIAQLC,EAASD,EAAAA,GAAAA,OAAH,+M,SC6EnB,EAlFe,WACb,OAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAQJ,EAAaK,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAIA,IAAMG,EAAkB,IAAIC,gBAEtBC,EAAe,iBAAaL,EAAb,WAEfM,EAAQ,mCAAG,8GAEcC,EAAAA,EAAAA,GALjB,gBAORJ,EACAE,GALW,OAEPG,EAFO,OAQbd,EAASc,GARI,gDAUbC,QAAQC,IAAR,0BAVa,yDAAH,qDAed,OAFAJ,IAEO,kBAAMH,EAAgBQ,OAAtB,CArBN,CAsBF,GAAE,CAACX,IAaJ,OACE,4BAEE,kBAAMY,SAAU,SAAAC,GAAC,OAdK,SAAAA,GACxBA,EAAEC,iBACF,IAAMC,EAAaF,EAAEG,OAAO,GAAGC,MAAMC,OAErC,GAAmB,KAAfH,EACF,OAAOlB,EAAgB,CAAC,GAE1BA,EAAgB,CAAEG,MAAOe,IACzBF,EAAEG,OAAOG,OACV,CAKwBC,CAAkBP,EAAtB,EAAjB,WACE,SAACxB,EAAD,CACEgC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,qBAEd,SAACjC,EAAD,CAAQ8B,KAAK,SAAb,wBAEF,gCACGI,QAAQhC,EAAMiC,UAAYjC,EAAMiC,QAAQC,OAAS,IAChD,wBACGlC,EAAMiC,QAAQE,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OAEjB,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,GAAME,MAAO,CAAEC,KAAMnC,GAAlC,SACG+B,KAFIC,EAFQ,MAWtBL,QAAQhC,EAAMiC,UACU,IAAzBjC,EAAMiC,QAAQC,QACC,IAAflC,EAAMyC,MACI,KAAVlC,GACE,sEACE,UAIX,C,8FCnFYO,EAAe,mCAAG,WAC7B4B,EACAhC,GAF6B,gGAG7BE,EAH6B,+BAGX,GAGZ+B,EANuB,mCAQvBC,EARuB,kDAQHF,EARG,mBAQgBC,EARhB,0BAQyC/B,GARzC,SAUNiC,EAAAA,EAAAA,IAAUD,EAAK,CAAEE,OAAQpC,EAAgBoC,SAVnC,cAUvBC,EAVuB,yBAYtBA,EAASC,MAZa,2CAAH,uD","sources":["pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/services.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Input = styled.input`\r\n  margin-right: 5px;\r\n  border: 2px solid grey;\r\n  border-radius: 3px;\r\n  height: 20px;\r\n  width: 300px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  border: 2px solid grey;\r\n  border-radius: 3px;\r\n  height: 26px;\r\n  width: 100px;\r\n  cursor: pointer;\r\n  &:hover,\r\n  :focus {\r\n    background-color: #80808054;\r\n    border: 0;\r\n  }\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport { AxiosApiService } from '../../services/services';\r\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\r\nimport { Input, Button } from './Movies.styled';\r\n\r\nconst Movies = () => {\r\n  const [items, setItems] = useState([]);\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const location = useLocation();\r\n\r\n  const query = searchParams.get('query');\r\n\r\n  useEffect(() => {\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    const abortController = new AbortController();\r\n    const queryUrl = `search/movie?`;\r\n    const wordSearchQuery = `&query=${query}&page=1`;\r\n\r\n    const getItems = async () => {\r\n      try {\r\n        const responseData = await AxiosApiService(\r\n          queryUrl,\r\n          abortController,\r\n          wordSearchQuery\r\n        );\r\n\r\n        setItems(responseData);\r\n      } catch (error) {\r\n        console.log(`IsError: ${error}`);\r\n      }\r\n    };\r\n    getItems();\r\n\r\n    return () => abortController.abort();\r\n  }, [query]);\r\n\r\n  const updateQueryString = e => {\r\n    e.preventDefault();\r\n    const queryValue = e.target[0].value.trim();\r\n\r\n    if (queryValue === '') {\r\n      return setSearchParams({});\r\n    }\r\n    setSearchParams({ query: queryValue });\r\n    e.target.reset();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* TODO:extract component */}\r\n      <form onSubmit={e => updateQueryString(e)}>\r\n        <Input\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"  Search movies\"\r\n        />\r\n        <Button type=\"submit\">Search</Button>\r\n      </form>\r\n      <>\r\n        {Boolean(items.results) && items.results.length > 0 && (\r\n          <ul>\r\n            {items.results.map(({ title, id }) => (\r\n              //TODO:extract component\r\n              <li key={id}>\r\n                <Link to={`${id}`} state={{ from: location }}>\r\n                  {title}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n\r\n        {Boolean(items.results) &&\r\n        items.results.length === 0 &&\r\n        items.page === 1 &&\r\n        query !== '' ? (\r\n          <p>No movies found, please change your query.</p>\r\n        ) : null}\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import axios from 'axios';\r\n\r\nexport const AxiosApiService = async (\r\n  queryUrl,\r\n  abortController,\r\n  wordSearchQuery = ''\r\n) => {\r\n  const BASE_URL = `https://api.themoviedb.org/3/`;\r\n  const API_KEY = `1f93214cb1bbadcc143eeb01d552ab8c`;\r\n\r\n  const url = `${BASE_URL}${queryUrl}api_key=${API_KEY}&language=en-US${wordSearchQuery}`;\r\n\r\n  const response = await axios.get(url, { signal: abortController.signal });\r\n\r\n  return response.data;\r\n};\r\n"],"names":["Input","styled","Button","useState","items","setItems","useSearchParams","searchParams","setSearchParams","location","useLocation","query","get","useEffect","abortController","AbortController","wordSearchQuery","getItems","AxiosApiService","responseData","console","log","abort","onSubmit","e","preventDefault","queryValue","target","value","trim","reset","updateQueryString","type","autoComplete","autoFocus","placeholder","Boolean","results","length","map","title","id","to","state","from","page","queryUrl","API_KEY","url","axios","signal","response","data"],"sourceRoot":""}