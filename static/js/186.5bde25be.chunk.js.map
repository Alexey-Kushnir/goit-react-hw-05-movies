{"version":3,"file":"static/js/186.5bde25be.chunk.js","mappings":"yNAgDA,UA5CgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBACtBC,EAAQ,gBAAYL,EAAZ,aAad,OAXA,iBAAC,8GAE8BM,EAAAA,EAAAA,GAAgBD,EAAUF,GAFxD,OAESI,EAFT,OAGGV,EAAWU,EAAaC,SAH3B,gDAKGC,QAAQC,IAAR,0BALH,yBAOGX,GAAa,GAPhB,2EAAD,GAWO,kBAAMI,EAAgBQ,OAAtB,CACR,GAAE,CAACX,KAGF,8BACGY,QAAQhB,IAA+B,IAAnBA,EAAQiB,QAC3B,wBACGjB,EAAQkB,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,2BACE,qCAAaF,MACb,uBAAIC,MAFGC,EADE,MAObnB,GACF,gDAEA,sEAIP,C,8FC5CYQ,EAAe,mCAAG,WAC7BD,EACAF,GAF6B,gGAG7Be,EAH6B,+BAGX,GAGZC,EANuB,mCAQvBC,EARuB,kDAQHf,EARG,mBAQgBc,EARhB,0BAQyCD,GARzC,SAUNG,EAAAA,EAAAA,IAAUD,EAAK,CAAEE,OAAQnB,EAAgBmB,SAVnC,cAUvBC,EAVuB,yBAYtBA,EAASC,MAZa,2CAAH,uD","sources":["components/Reviews/Reviews.jsx","services/services.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { AxiosApiService } from './../../services/services';\r\n\r\nconst Reviews = () => {\r\n  const [reviews, setReviews] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const { movieId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    const queryUrl = `movie/${movieId}/reviews?`;\r\n\r\n    (async () => {\r\n      try {\r\n        const responseData = await AxiosApiService(queryUrl, abortController);\r\n        setReviews(responseData.results);\r\n      } catch (error) {\r\n        console.log(`IsError: ${error}`);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    })();\r\n\r\n    return () => abortController.abort();\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {Boolean(reviews) && reviews.length !== 0 ? (\r\n        <ul>\r\n          {reviews.map(({ author, content, id }) => (\r\n            <li key={id}>\r\n              <h4>Author: {author}</h4>\r\n              <p>{content}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : isLoading ? (\r\n        <p> Loading results...</p>\r\n      ) : (\r\n        <p>We don't have any reviews for this movie.</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n","import axios from 'axios';\r\n\r\nexport const AxiosApiService = async (\r\n  queryUrl,\r\n  abortController,\r\n  wordSearchQuery = ''\r\n) => {\r\n  const BASE_URL = `https://api.themoviedb.org/3/`;\r\n  const API_KEY = `1f93214cb1bbadcc143eeb01d552ab8c`;\r\n\r\n  const url = `${BASE_URL}${queryUrl}api_key=${API_KEY}&language=en-US${wordSearchQuery}`;\r\n\r\n  const response = await axios.get(url, { signal: abortController.signal });\r\n\r\n  return response.data;\r\n};\r\n"],"names":["useState","reviews","setReviews","isLoading","setIsLoading","movieId","useParams","useEffect","abortController","AbortController","queryUrl","AxiosApiService","responseData","results","console","log","abort","Boolean","length","map","author","content","id","wordSearchQuery","API_KEY","url","axios","signal","response","data"],"sourceRoot":""}