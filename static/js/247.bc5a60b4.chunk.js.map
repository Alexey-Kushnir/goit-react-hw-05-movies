{"version":3,"file":"static/js/247.bc5a60b4.chunk.js","mappings":"yNAoDA,UAhDa,WACX,OAAgCA,EAAAA,EAAAA,YAAhC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBACtBC,EAAQ,gBAAYL,EAAZ,aAERM,EAAW,mCAAG,8GAEWC,EAAAA,EAAAA,GAAgBF,EAAUF,GAFrC,OAEVK,EAFU,OAIhBT,EAAYS,EAAaC,MAJT,gDAMhBC,QAAQC,IAAR,0BANgB,yDAAH,qDAWjB,OAFAL,IAEO,kBAAMH,EAAgBS,OAAtB,CACR,GAAE,CAACZ,KAGF,8BACGa,QAAQf,KACP,wBACGA,EAASgB,KAAI,YAAiD,IAA9CC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAQzC,OACE,2BACE,gBAAKC,IATK,SAAAD,GACZ,OAAKA,EAGC,uCAAN,OAA8CA,GAFrC,6EAGV,CAIaE,CAAMF,GAAeG,IAAI,GAAGC,OAAO,WAC7C,uBAAIL,KACJ,uCAAeD,OAHRD,EAMZ,OAKV,C,8FChDYR,EAAe,mCAAG,WAC7BF,EACAF,GAF6B,gGAG7BoB,EAH6B,+BAGX,GAGZC,EANuB,mCAQvBC,EARuB,kDAQHpB,EARG,mBAQgBmB,EARhB,0BAQyCD,GARzC,SAUNG,EAAAA,EAAAA,IAAUD,EAAK,CAAEE,OAAQxB,EAAgBwB,SAVnC,cAUvBC,EAVuB,yBAYtBA,EAASC,MAZa,2CAAH,uD","sources":["components/Cast/Cast.jsx","services/services.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { AxiosApiService } from './../../services/services';\n\nconst Cast = () => {\n  const [castInfo, setCastInfo] = useState();\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const queryUrl = `movie/${movieId}/credits?`;\n\n    const getCastInfo = async () => {\n      try {\n        const responseData = await AxiosApiService(queryUrl, abortController);\n\n        setCastInfo(responseData.cast);\n      } catch (error) {\n        console.log(`IsError: ${error}`);\n      }\n    };\n    getCastInfo();\n\n    return () => abortController.abort();\n  }, [movieId]);\n\n  return (\n    <>\n      {Boolean(castInfo) && (\n        <ul>\n          {castInfo.map(({ cast_id, character, name, profile_path }) => {\n            const photo = profile_path => {\n              if (!profile_path) {\n                return 'https://developersushant.files.wordpress.com/2015/02/no-image-available.png';\n              }\n              return `https://image.tmdb.org/t/p/original/${profile_path}`;\n            };\n\n            return (\n              <li key={cast_id}>\n                <img src={photo(profile_path)} alt=\"\" height=\"150px\" />\n                <p>{name}</p>\n                <p>Character: {character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nexport const AxiosApiService = async (\n  queryUrl,\n  abortController,\n  wordSearchQuery = ''\n) => {\n  const BASE_URL = `https://api.themoviedb.org/3/`;\n  const API_KEY = `1f93214cb1bbadcc143eeb01d552ab8c`;\n\n  const url = `${BASE_URL}${queryUrl}api_key=${API_KEY}&language=en-US${wordSearchQuery}`;\n\n  const response = await axios.get(url, { signal: abortController.signal });\n\n  return response.data;\n};\n"],"names":["useState","castInfo","setCastInfo","movieId","useParams","useEffect","abortController","AbortController","queryUrl","getCastInfo","AxiosApiService","responseData","cast","console","log","abort","Boolean","map","cast_id","character","name","profile_path","src","photo","alt","height","wordSearchQuery","API_KEY","url","axios","signal","response","data"],"sourceRoot":""}