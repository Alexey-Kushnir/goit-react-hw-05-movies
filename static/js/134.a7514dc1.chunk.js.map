{"version":3,"file":"static/js/134.a7514dc1.chunk.js","mappings":"sQAIaA,EAAS,WACpB,OAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAgBC,EAAAA,EAAAA,SAAO,IAI7BC,EAAAA,EAAAA,YAAU,WACR,IAAIF,EAAcG,QAAlB,CAIA,IAAMC,EAAkB,IAAIC,gBAEtBC,EAAe,iBAAaV,EAAb,WAEfW,EAAQ,mCAAG,8GAEcC,EAAAA,EAAAA,GALjB,gBAORJ,EACAE,GALW,OAEPG,EAFO,OAQbd,EAASc,GARI,uGAAH,qDAed,OAFAF,IAEO,kBAAMH,EAAgBM,OAAtB,CApBN,CAFCV,EAAcG,SAAU,CAuB3B,GAAE,CAACP,IASJ,OACE,4BACE,kBACEe,SAAU,SAAAC,IAVK,SAAAA,GACnBA,EAAEC,iBACF,IAAMC,EAAaF,EAAEG,OAAO,GAAGC,MAAMC,OAErCpB,EAASiB,EACV,CAMOI,CAAaN,EACd,EAHH,WAKE,kBACEO,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEd,mBAAQH,KAAK,SAAb,wBAGF,gCACGI,QAAQ7B,EAAM8B,UAAY9B,EAAM8B,QAAQC,OAAS,IAChD,wBACG/B,EAAM8B,QAAQE,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,GAAME,MAAO,CAAEC,KAAMjC,GAAlC,SACG6B,KAFIC,EAMZ,MAGJL,QAAQ7B,EAAM8B,UACU,IAAzB9B,EAAM8B,QAAQC,QACC,IAAf/B,EAAMsC,MACI,KAAVpC,GACE,sEACE,UAIX,EAED,W,8FCrFaY,EAAe,mCAAG,WAC7ByB,EACA7B,GAF6B,gGAG7BE,EAH6B,+BAGX,GAGZ4B,EANuB,mCAQvBC,EARuB,kDAQHF,EARG,mBAQgBC,EARhB,0BAQyC5B,GARzC,SAWN8B,EAAAA,EAAAA,IAAUD,EAAK,CAAEE,OAAQjC,EAAgBiC,SAXnC,cAWvBC,EAXuB,yBAetBA,EAASC,MAfa,2CAAH,uD","sources":["pages/Movies.jsx","services/services.js"],"sourcesContent":["import { useEffect, useState, useRef } from 'react';\nimport { AxiosApiService } from '../services/services';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const Movies = () => {\n  const [items, setItems] = useState({});\n  const [query, setQuery] = useState('');\n  const location = useLocation();\n  const initialRender = useRef(true);\n\n  // console.log(location);\n\n  useEffect(() => {\n    if (initialRender.current) {\n      initialRender.current = false;\n      return;\n    }\n    const abortController = new AbortController();\n    const queryUrl = `search/movie?`;\n    const wordSearchQuery = `&query=${query}&page=1`;\n\n    const getItems = async () => {\n      try {\n        const responseData = await AxiosApiService(\n          queryUrl,\n          abortController,\n          wordSearchQuery\n        );\n\n        setItems(responseData);\n      } catch (error) {\n        // console.log(`IsError: ${error}`);\n      }\n    };\n    getItems();\n\n    return () => abortController.abort();\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const inputValue = e.target[0].value.trim();\n\n    setQuery(inputValue);\n  };\n\n  return (\n    <div>\n      <form\n        onSubmit={e => {\n          handleSubmit(e);\n        }}\n      >\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      <>\n        {Boolean(items.results) && items.results.length > 0 && (\n          <ul>\n            {items.results.map(({ title, id }) => {\n              return (\n                <li key={id}>\n                  <Link to={`${id}`} state={{ from: location }}>\n                    {title}\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n        {Boolean(items.results) &&\n        items.results.length === 0 &&\n        items.page === 1 &&\n        query !== '' ? (\n          <p>No movies found, please change your query.</p>\n        ) : null}\n      </>\n    </div>\n  );\n};\n\nexport default Movies;\n\n// const [searchParams] = useSearchParams();\n// const params = useMemo(\n//   () => Object.fromEntries([...searchParams]),\n//   [searchParams]\n// );\n// const { name, maxPrice, inStock } = params;\n","import axios from 'axios';\n\nexport const AxiosApiService = async (\n  queryUrl,\n  abortController,\n  wordSearchQuery = ''\n) => {\n  const BASE_URL = `https://api.themoviedb.org/3/`;\n  const API_KEY = `1f93214cb1bbadcc143eeb01d552ab8c`;\n\n  const url = `${BASE_URL}${queryUrl}api_key=${API_KEY}&language=en-US${wordSearchQuery}`;\n\n  // const response = await axios.get(url);\n  const response = await axios.get(url, { signal: abortController.signal });\n\n  // console.log(response.data);\n\n  return response.data;\n};\n"],"names":["Movies","useState","items","setItems","query","setQuery","location","useLocation","initialRender","useRef","useEffect","current","abortController","AbortController","wordSearchQuery","getItems","AxiosApiService","responseData","abort","onSubmit","e","preventDefault","inputValue","target","value","trim","handleSubmit","type","autoComplete","autoFocus","placeholder","Boolean","results","length","map","title","id","to","state","from","page","queryUrl","API_KEY","url","axios","signal","response","data"],"sourceRoot":""}